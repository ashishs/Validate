namespace Validate
{
    public class ValidationMessage
    {
        public string Message { get; private set; }
        private readonly bool _isAutoGenerated;
        private object _targetType;
        private object _targetMember;
        private object _targetValue;
        private object _targetValueEqualTo;
        private object _targetValueLesserThan;
        private object _targetValueGreaterThan;
        private object _targetValueIsOneOf;
        private object _targetValueContains;
        private object _targetValueMatchesRegex;
        private object _targetValueNotEqualTo;

        public ValidationMessage(string message, bool isAutoGenerated = false)
        {
            Message = message;
            _isAutoGenerated = isAutoGenerated;
        }

        public virtual ValidationMessage Populate(object targetType = null, object targetMember = null, object targetValue = null, object targetValueEqualTo = null,
                                         object targetValueLesserThan = null, object targetValueGreaterThan = null, object targetValueIsOneOf = null,
                                         object targetValueContains = null, object targetValueMatchesRegex = null, object targetValueNotEqualTo = null)
        {
            _targetValueNotEqualTo = targetValueNotEqualTo ?? _targetValueNotEqualTo;
            _targetValueMatchesRegex = targetValueMatchesRegex ??  _targetValueMatchesRegex;
            _targetValueContains = targetValueContains ??  _targetValueContains;
            _targetValueIsOneOf = targetValueIsOneOf ??  _targetValueIsOneOf;
            _targetValueGreaterThan = targetValueGreaterThan ??  _targetValueGreaterThan;
            _targetValueLesserThan = targetValueLesserThan ??  _targetValueLesserThan;
            _targetValueEqualTo = targetValueEqualTo ??  _targetValueEqualTo;
            _targetValue = targetValue ??  _targetValue;
            _targetMember = targetMember ??  _targetMember;
            _targetType = targetType ?? _targetType;
            return this;
        }

        public override string ToString()
        {
            return Message
                .Replace(TARGET_TYPE, GetValue(_targetType))
                .Replace(TARGET_MEMBER, GetValue(_targetMember))
                .Replace(TARGET_VALUE, GetValue(_targetValue))
                .Replace(TARGET_VALUE_EQUAL_TO, GetValue(_targetValueEqualTo))
                .Replace(TARGET_VALUE_NOT_EQUAL_TO, GetValue(_targetValueNotEqualTo))
                .Replace(TARGET_VALUE_LESSER_THAN, GetValue(_targetValueLesserThan))
                .Replace(TARGET_VALUE_GREATER_THAN, GetValue(_targetValueGreaterThan))
                .Replace(TARGET_VALUE_IS_ONE_OF, GetValue(_targetValueIsOneOf))
                .Replace(TARGET_VALUE_CONTAINS, GetValue(_targetValueContains))
                .Replace(TARGET_VALUE_MATCHES_REGEX, GetValue(_targetValueMatchesRegex));
        }

        private string GetValue(object obj)
        {
            return obj == null ? "'NULL'" : obj.ToString();
        }
        
        public bool IsAutoGenerated
        {
            get { return _isAutoGenerated; }
        }

        private const string TARGET_TYPE = "{TargetType}";
        private const string TARGET_MEMBER = "{TargetMember}";
        private const string TARGET_VALUE = "{TargetValue}";
        private const string TARGET_VALUE_EQUAL_TO = "{TargetValueEqualTo}";
        private const string TARGET_VALUE_NOT_EQUAL_TO = "{TargetValueNotEqualTo}";
        private const string TARGET_VALUE_LESSER_THAN = "{TargetValueLesserThan}";
        private const string TARGET_VALUE_GREATER_THAN = "{TargetValueGreaterThan}";
        private const string TARGET_VALUE_IS_ONE_OF = "{TargetValueIsOneOf}";
        private const string TARGET_VALUE_CONTAINS = "{TargetValueContains}";
        private const string TARGET_VALUE_MATCHES_REGEX = "{TargetValueMatchesRegex}";
    }
}